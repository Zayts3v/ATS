/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 14:31:29 GMT 2020
 */

package view.viewmodel;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import utils.Point;
import view.viewmodel.RegisterUser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegisterUser_ESTest extends RegisterUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("8kJo*N7s`tADARE<,", "JVEj", "(", "JVEj", (-918));
      registerUser0.getPos();
      assertEquals("(", registerUser0.getPasswd());
      assertEquals((-918), registerUser0.getNif());
      assertEquals("JVEj", registerUser0.getEmail());
      assertEquals("8kJo*N7s`tADARE<,", registerUser0.getName());
      assertEquals("JVEj", registerUser0.getAddress());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      String string0 = registerUser0.getPasswd();
      assertNull(string0);
      assertEquals(0, registerUser0.getNif());
      assertEquals("Z?,x", registerUser0.getEmail());
      assertEquals("", registerUser0.getAddress());
      assertEquals("view.viewmodel.RegisterUser", registerUser0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("JXb_)H'.&$9YC", "`", "Atc7S;U$ta", "fjMa?y0EME4(", 1, point0);
      String string0 = registerUser0.getPasswd();
      assertEquals("fjMa?y0EME4(", registerUser0.getAddress());
      assertEquals("`", registerUser0.getEmail());
      assertEquals(1, registerUser0.getNif());
      assertEquals("JXb_)H'.&$9YC", registerUser0.getName());
      assertEquals("Atc7S;U$ta", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("JXb_)H'.&$9YC", "`", "Atc7S;U$ta", "fjMa?y0EME4(", 1, point0);
      int int0 = registerUser0.getNif();
      assertEquals(1, int0);
      assertEquals("JXb_)H'.&$9YC", registerUser0.getName());
      assertEquals("`", registerUser0.getEmail());
      assertEquals("Atc7S;U$ta", registerUser0.getPasswd());
      assertEquals("fjMa?y0EME4(", registerUser0.getAddress());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("8kJo*N7s`tADARE<,", "JVEj", "(", "JVEj", (-918));
      int int0 = registerUser0.getNif();
      assertEquals("8kJo*N7s`tADARE<,", registerUser0.getName());
      assertEquals((-918), int0);
      assertEquals("(", registerUser0.getPasswd());
      assertEquals("JVEj", registerUser0.getAddress());
      assertEquals("JVEj", registerUser0.getEmail());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, (-1));
      registerUser0.getName();
      assertEquals((-1), registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", (String) null, 0);
      String string0 = registerUser0.getName();
      assertNotNull(string0);
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser((String) null, (String) null, (String) null, (String) null, (-1));
      registerUser0.getEmail();
      assertEquals((-1), registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", (String) null, 0);
      String string0 = registerUser0.getEmail();
      assertEquals(0, registerUser0.getNif());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("JXb_)H'.&$9YC", "`", "Atc7S;U$ta", "fjMa?y0EME4(", 1, point0);
      String string0 = registerUser0.getAddress();
      assertEquals("fjMa?y0EME4(", string0);
      assertEquals("JXb_)H'.&$9YC", registerUser0.getName());
      assertEquals("Atc7S;U$ta", registerUser0.getPasswd());
      assertEquals(1, registerUser0.getNif());
      assertEquals("`", registerUser0.getEmail());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      String string0 = registerUser0.getAddress();
      assertNotNull(string0);
      assertEquals("Z?,x", registerUser0.getEmail());
      assertEquals("", string0);
      assertEquals("view.viewmodel.RegisterUser", registerUser0.getName());
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      String string0 = registerUser0.getName();
      assertEquals("view.viewmodel.RegisterUser", string0);
      assertEquals(0, registerUser0.getNif());
      assertNotNull(string0);
      assertEquals("", registerUser0.getAddress());
      assertEquals("Z?,x", registerUser0.getEmail());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      int int0 = registerUser0.getNif();
      assertEquals("", registerUser0.getAddress());
      assertEquals("Z?,x", registerUser0.getEmail());
      assertEquals(0, int0);
      assertEquals("view.viewmodel.RegisterUser", registerUser0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      String string0 = registerUser0.getEmail();
      assertEquals("view.viewmodel.RegisterUser", registerUser0.getName());
      assertEquals(0, registerUser0.getNif());
      assertEquals("Z?,x", string0);
      assertNotNull(string0);
      assertEquals("", registerUser0.getAddress());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      RegisterUser registerUser0 = new RegisterUser("view.viewmodel.RegisterUser", "Z?,x", (String) null, "", 0, point0);
      registerUser0.getPos();
      assertEquals("Z?,x", registerUser0.getEmail());
      assertEquals(0, registerUser0.getNif());
      assertEquals("", registerUser0.getAddress());
      assertEquals("view.viewmodel.RegisterUser", registerUser0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", (String) null, 0);
      String string0 = registerUser0.getAddress();
      assertNull(string0);
      assertEquals(0, registerUser0.getNif());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegisterUser registerUser0 = new RegisterUser("", "", "", (String) null, 0);
      String string0 = registerUser0.getPasswd();
      assertEquals(0, registerUser0.getNif());
      assertNotNull(string0);
  }
}
