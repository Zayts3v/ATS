/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 14:24:51 GMT 2020
 */

package view.viewmodel;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;
import view.viewmodel.TimeInterval;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeInterval_ESTest extends TimeInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond((-1L), 0, zoneOffset0);
      TimeInterval timeInterval0 = new TimeInterval(localDateTime0, localDateTime0);
      LocalDateTime localDateTime1 = timeInterval0.getInicio();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond((-1L), 0, zoneOffset0);
      TimeInterval timeInterval0 = new TimeInterval(localDateTime0, localDateTime0);
      LocalDateTime localDateTime1 = timeInterval0.getFim();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeInterval timeInterval0 = new TimeInterval((LocalDateTime) null, (LocalDateTime) null);
      LocalDateTime localDateTime0 = timeInterval0.getInicio();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeInterval timeInterval0 = new TimeInterval((LocalDateTime) null, (LocalDateTime) null);
      LocalDateTime localDateTime0 = timeInterval0.getFim();
      assertNull(localDateTime0);
  }
}
