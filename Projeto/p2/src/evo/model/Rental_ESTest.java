/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 14:02:06 GMT 2020
 */

package model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import model.Car;
import model.Client;
import model.Owner;
import model.Rental;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import utils.Point;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rental_ESTest extends Rental_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Owner owner0 = new Owner("ANY", "ANY", "Custo Estimado: ", (-2260), "ANY");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(1.0);
      Double double1 = new Double((-1664.6815506));
      Point point0 = new Point(double0, double1);
      Point point1 = new Point(double0, double0);
      Car car0 = new Car("ANY", owner0, car_CarType0, (-2260), (-2260), 0.4, (-1584), point1, (String) null);
      car0.setBasePrice(-0.0);
      Rental rental0 = new Rental(car0, (Client) null, point1);
      Rental rental1 = new Rental(car0, (Client) null, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Owner owner0 = new Owner("`7Ea$dA#~", "mY#vA)c{", "mY#vA)c{", (-2946), "Client:        ");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(2720.7);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, 0.5, (-1222.448052678), 0.4, (-1719145501), point0, "/7A*OIi2[@nT5w4G");
      Client client0 = new Client(point0, (String) null, "`A*>!bf& uL", "mY#vA)c{", "Dono:           ", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      Double double1 = new Double(1);
      Point point1 = new Point(double1, double1);
      Rental rental1 = new Rental(car0, client0, point1);
      boolean boolean0 = rental1.equals(rental0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "model.Rental", "model.Rental", (-2946), (String) null);
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2720.7);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, (String) null, (String) null, "model.Rental", "Dono:           ", 1);
      Double double1 = new Double(1);
      Point point1 = new Point(double1, double1);
      Car car0 = new Car("!_z\"xtYhF8R", owner0, car_CarType0, 0.4, 2720.7, 0.4, 2964, point1, (String) null);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toString();
      assertEquals("Client:        null\nCarro:          !_z\"xtYhF8R\nDono:           null\nViagem:         (1.00, 1.00) -> (2720.70, 2720.70)\nTempo a p\u00E9      961.56\nTempo Estimado: 9615.59\nCusto Estimado: 10464455.99", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner("QuL", (String) null, "J/P", (-308), (String) null);
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double(2.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "S6!&jn.}fo`Q{6`", "QuL", "S6!&jn.}fo`Q{6`", "S6!&jn.}fo`Q{6`", (-308));
      Double double1 = new Double(1063.56898);
      Point point1 = new Point(double0, double1);
      Car car0 = new Car("F=kPYz3~Q9XVf$~V{-`", owner0, car_CarType0, 2.0, 2.0, (-308), 1073252381, point1, "");
      Rental rental0 = new Rental(car0, client0, point1);
      String string0 = rental0.toParsableUserString();
      assertEquals("S6!&jn.}fo`Q{6`\nF=kPYz3~Q9XVf$~V{-`\n(2.00, 1063.57)\n(2.00, 1063.57)\n265.39\n0.00\n0.00\n100", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2916), (String) null);
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double((-29.94192219963547));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-29.94192219963547), (-29.94192219963547), (-2916), (-2916), point0, (String) null);
      Client client0 = new Client(point0, (String) null, (String) null, (String) null, (String) null, (-2916));
      Double double1 = new Double((-2916));
      Point point1 = new Point(double1, double1);
      Rental rental0 = new Rental(car0, client0, point1);
      rental0.rent();
      double double2 = rental0.getPrice();
      //  // Unstable assertion: assertEquals((-137822.51160002127), double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "", "Rs]~", 1082, (String) null);
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(3843.502582060148);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, 0.0, 3843.502582060148, (-1.0), (-792), point0, "b(");
      Client client0 = new Client(point0, "", "", (String) null, "", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getOwnerID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Owner owner0 = new Owner(" -> ", " -> ", ".;b", 1240, " -> ");
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double(1240);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car(" -> ", owner0, car_CarType0, (-1542.974), 1240, 0.0, 3344, point0, ".;b");
      Client client0 = new Client(point0, (String) null, "~9", ".;b", "~9", 3344);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getOwnerID();
      assertEquals(" -> ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", (-1086), "");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double((-3564.5559538));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car(" 5%&KFOIXVo]6^_", owner0, car_CarType0, (-1086), (-1086), 0.2, 3, point0, "ym6~(D>[7y&[5EcI1");
      Client client0 = new Client(point0, " 5%&KFOIXVo]6^_", " 5%&KFOIXVo]6^_", "ym6~(D>[7y&[5EcI1", "2h#G", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getOwnerID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(0.0);
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("5[KoU+r", (Owner) null, car_CarType0, 1711.3166375, (-1.0), 1.2, (-2056), point0, "Tempo a p\u00E9      ");
      Client client0 = new Client(point0, "Tempo a p\u00E9      ", "]~YIu;mXh>%5=", "", "", (-2056));
      Double double1 = new Double((-1772.88));
      Point point1 = new Point(double1, double0);
      Rental rental0 = new Rental(car0, client0, point1);
      double double2 = rental0.getDistance();
      assertEquals(1772.88, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Owner owner0 = new Owner(" -> ", " -> ", ".;b", 1240, " -> ");
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double(1240);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car(" -> ", owner0, car_CarType0, (-1542.974), 1240, 0.0, 3344, point0, ".;b");
      Client client0 = new Client(point0, (String) null, "~9", ".;b", "~9", 3344);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Owner owner0 = new Owner("vrr/4gH'2PH$qIDliC", "vrr/4gH'2PH$qIDliC", "", 1473122002, "");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(231.79);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("vrr/4gH'2PH$qIDliC", owner0, car_CarType0, 1473122002, 1473122002, 1473122002, 1473122002, point0, "");
      Client client0 = new Client(point0, "'&^()p}uu.5N`L9W", "heGs.,BNiN<(!", "Viagem:         ", "heGs.,BNiN<(!", 1473122002);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertEquals("'&^()p}uu.5N`L9W", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Owner owner0 = new Owner((String) null, "", "Rs]~", 1082, (String) null);
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(3843.502582060148);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, 0.0, 3843.502582060148, (-1.0), (-792), point0, "b(");
      Client client0 = new Client(point0, "", "", (String) null, "", 0);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getCarID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("*x%f`2{[t_P", (Owner) null, car_CarType0, 4.0, 442.25, 4.0, 0, point0, "*x%f`2{[t_P");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      String string0 = rental0.getCarID();
      assertEquals("*x%f`2{[t_P", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Owner owner0 = new Owner("DEqS??)%F", "DEqS??)%F", "", 1, "");
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 1, 1, (-3197.115766), 1, point0, "");
      Client client0 = new Client((Point) null, "Custo Estimado: ", "m", (String) null, "c$@bi=]=Uxnom.", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableUserString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("utils.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(0.1);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, 1438.825044133, 0.0, 0.1, 759, point0, "");
      Client client0 = new Client(point0, "", "ELECTRIC", "", "zm?o;oTq*X5P6c", 759);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableUserRentalString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Owner owner0 = new Owner("\n", "\n", "\n", 3104, "");
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double((-873.996574205977));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("\n", owner0, car_CarType0, 3104, 3104, (-1.0), 1555, point0, "");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.toParsableOwnerRentalString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(684.382);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, (Owner) null, car_CarType0, 684.382, 684.382, 684.382, (-2102), point0, "model.Car$CarType");
      Client client0 = new Client(point0, "model.Car$CarType", "yyyy-MM-dd HH:mm", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.rent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("*x%f`2{[t_P", (Owner) null, car_CarType0, 4.0, 442.25, 4.0, 0, point0, "*x%f`2{[t_P");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.rate(0, 25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Owner owner0 = new Owner("Tv7nf", "Tv7nf", "utils.Point", (-1907), "utils.Point");
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double((-1907));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("utils.Point", owner0, car_CarType0, 0.0, (-1215.0), 1634.8130935060333, (-1907), point0, "0");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.rate(243);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Owner owner0 = new Owner("9pR_g;3%r':", "YBC]ui:", "YBC]ui:", (-230), (String) null);
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Double double0 = new Double((-654));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("model.User", owner0, car_CarType0, (-230), (-230), (-230), (-654), point0, "UF`.z");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.getClientID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Owner owner0 = new Owner("ANY", "ANY", "Custo Estimado: ", (-2260), "ANY");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(1.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("ANY", owner0, car_CarType0, (-2260), (-2260), 0.4, (-1584), point0, (String) null);
      Rental rental0 = new Rental(car0, (Client) null, point0);
      Rental rental1 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        rental0.equals(rental1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Car car0 = new Car("iTP(Ym%`gPMiM", (Owner) null, car_CarType0, 0.0, (-524.7118086957195), 0.0, (-1), (Point) null, "rKmxoT%D");
      Rental rental0 = null;
      try {
        rental0 = new Rental(car0, (Client) null, (Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 2, "\u001B[33m");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1693.4);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 2, 2, 2, 2, point0, "\u001B[33m");
      Client client0 = new Client(point0, "cxw", "f1@zpoCZsYY?V\u0002cb", "aA4W$D0j/USoF=*&!8D", "`Crl_C,xZYs8@4S0#H$", 2);
      Rental rental0 = new Rental(car0, client0, point0);
      System.setCurrentTimeMillis(2);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, 1254, "q^YGr}");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Point point1 = new Point(point0);
      Car car0 = new Car((String) null, owner0, car_CarType0, 1254, 1142.298417335944, 1254, 2182043, point1, "prn:um{TQ+m");
      Client client0 = new Client(point0, (String) null, "\u001B[38m", "\u001B[38m", (String) null, 7);
      Rental rental0 = new Rental(car0, client0, point1);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Owner owner0 = new Owner("`7Ea$dA#~", "mY#vA)c{", "mY#vA)c{", (-2946), "Client      ");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double((-2946));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-2946), (-1222.448052678), 0.4, (-2946), point0, "/7A*OIi2[@nT5w4G");
      Car car1 = new Car((String) null, owner0, car_CarType0, (-2946), (-2946), (-1222.448052678), (-2946), point0, "Client      ");
      Client client0 = new Client(point0, (String) null, "`A*>!bf& uL", "mY#vA)c{", "Dono:           ", 1);
      Rental rental0 = new Rental(car1, client0, point0);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", (-103), "");
      Double double0 = new Double((-103));
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, (-103), (-103), (-206.0), (-103), point0, "");
      Client client0 = new Client(point0, "", "", "", "", (-103));
      Rental rental0 = new Rental(car0, client0, point0);
      Rental rental1 = new Rental(car0, (Client) null, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Owner owner0 = new Owner("GAS", "GAS", "GAS", (-2299), "GAS");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double((-2299));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("GAS", owner0, car_CarType0, (-2299), (-2299), (-2299), (-2299), point0, "GAS");
      car0.setBasePrice(-0.0);
      Double double1 = new Double(-0.0);
      Point point1 = new Point(double1, double1);
      Rental rental0 = new Rental(car0, (Client) null, point1);
      Rental rental1 = new Rental(car0, (Client) null, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2916), (String) null);
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double((-31.42));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-31.42), (-31.42), (-2916), (-2916), point0, (String) null);
      Client client0 = new Client(point0, (String) null, (String) null, (String) null, (String) null, (-2916));
      Rental rental0 = new Rental(car0, client0, point0);
      Double double1 = new Double((-2916));
      Point point1 = new Point(double1, double1);
      Rental rental1 = new Rental(car0, client0, point1);
      boolean boolean0 = rental0.equals(rental1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      Rental rental1 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals(rental1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2946), (String) null);
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double((-2946));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-2946), (-2946), 0.4033640815630886, (-2946), point0, (String) null);
      Client client0 = new Client(point0, (String) null, (String) null, (String) null, (String) null, (-2946));
      Rental rental0 = new Rental(car0, client0, point0);
      boolean boolean0 = rental0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      car0.pendingRental(rental0);
      rental0.rent();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Owner owner0 = new Owner("DEqS??)%F", "DEqS??)%F", "", 1, "");
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 1, 1, (-3197.115766), 1, point0, "");
      Client client0 = new Client((Point) null, "Custo Estimado: ", "m", (String) null, "c$@bi=]=Uxnom.", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      Object object0 = new Object();
      boolean boolean0 = rental0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Owner owner0 = new Owner("DEqS??)%F", "DEqS??)%F", "", 1, "");
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(1);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 1, 1, (-3197.115766), 1, point0, "");
      Client client0 = new Client((Point) null, "Custo Estimado: ", "m", (String) null, "c$@bi=]=Uxnom.", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      LocalDateTime localDateTime0 = rental0.getDate();
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toParsableUserRentalString();
      assertEquals("2014-02-14 20:21\nCusto EstimadoaZe: \nCusto EstimadoaZe: \n(2147466066.00, 2147466066.00)\n(2147466066.00, 2147466066.00)\n0.00", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.rate(2147466066, 2147466066);
      assertEquals(2147466066, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.rate(2147466066);
      assertEquals(2147466066, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      double double1 = rental0.getDistance();
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toParsableOwnerRentalString();
      assertEquals("2014-02-14 20:21\n\n\n(1711.32, 1711.32)\n(1711.32, 1711.32)\n0.00", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      double double1 = rental0.getPrice();
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getCarID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        rental0.getOwnerID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.toFinalString();
      assertEquals("Tempo Total: 0.00\nCusto Total: 0.00\n\n\u001B[4m\u001B[0m", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Owner owner0 = new Owner("Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066, "Custo EstimadoaZe: ");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(2147466066);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("Custo EstimadoaZe: ", owner0, car_CarType0, 2147466066, 2147466066, 2147466066, 2147466066, point0, "Custo EstimadoaZe: ");
      Client client0 = new Client(point0, "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", "Custo EstimadoaZe: ", 2147466066);
      Rental rental0 = new Rental(car0, client0, point0);
      rental0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(1711.3166375);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", (Owner) null, car_CarType0, (-217.09), (-217.09), 0.0, 1, point0, "");
      Client client0 = new Client(point0, "", "", "", "", 1);
      Rental rental0 = new Rental(car0, client0, point0);
      String string0 = rental0.getClientID();
      assertEquals("", string0);
  }
}
