/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 14:14:55 GMT 2020
 */

package model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import model.Car;
import model.Client;
import model.Owner;
import model.Rental;
import model.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import utils.Point;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Owner_ESTest extends Owner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Owner owner0 = new Owner("z$d", "", "", 0, "");
      owner0.refuse((Rental) null);
      assertEquals(100, owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Owner owner0 = new Owner("", "QeuH@?Zh@p", "HA-ZD=|=Ub6pH6u", 2751, "model.Car");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(786.71);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 0.5, 0.0, 0.5, 2751, point0, "model.Car");
      Client client0 = new Client(point0, "model.Car", "", "", "QeuH@?Zh@p", 12);
      Rental rental0 = new Rental(car0, client0, point0);
      owner0.rate(rental0, 12);
      assertEquals(12, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Owner owner0 = new Owner("", "", (String) null, 1, (String) null);
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, (-194.16908390001), 0.15, (-194.16908390001), 3357, point0, "");
      Client client0 = new Client(point0, (String) null, (String) null, (String) null, (String) null, (-1352));
      Rental rental0 = new Rental(car0, client0, point0);
      owner0.addPendingRental(rental0);
      List<Rental> list0 = owner0.getPending();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, 1690, "f{6LAY+7k4k[n");
      owner0.addCar((Car) null);
      List<Car> list0 = owner0.getCars();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "&J? HR' vVyW", "", "", (-1194));
      Owner owner0 = new Owner(client0);
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Car car0 = new Car((String) null, owner0, car_CarType0, (-1194), 0.0, (-1194), 2, point0, "");
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        owner0.refuse(rental0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Owner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double((-1511.9817400123));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "hw2U1a($1th", "hw2U1a($1th", "hw2U1a($1th", "hw2U1a($1th", 664);
      Owner owner0 = new Owner(client0);
      // Undeclared exception!
      try { 
        owner0.getPending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-456.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Owner", "model.Owner", "*|iLKH&e@Y*^zs7$E.Q", "", 85);
      Owner owner0 = new Owner(client0);
      // Undeclared exception!
      try { 
        owner0.getCars();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double((-32.972293));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "HkP#j8Sf$`!'<BA", "]t`EDgl)2[*q", "]t`EDgl)2[*q", "KM5}RAT~v>a+5tm", (-1422));
      Owner owner0 = new Owner(client0);
      Owner owner1 = new Owner("HkP#j8Sf$`!'<BA", "HkP#j8Sf$`!'<BA", "]t`EDgl)2[*q", (-1422), "");
      // Undeclared exception!
      try { 
        owner0.equals(owner1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Owner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double((-1187.562161073));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Owner", "model.Owner", "o+W;9ZHIhX", "5Om`De'c!P<P", 0);
      Owner owner0 = new Owner(client0);
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Car car0 = new Car("model.Owner", owner0, car_CarType0, 0.0, 1.0, (-1187.562161073), (-2084), point0, "");
      Rental rental0 = new Rental(car0, client0, point0);
      // Undeclared exception!
      try { 
        owner0.addPendingRental(rental0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Owner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double((-1113.0));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "b=6 ILwAZQvH,", "b=6 ILwAZQvH,", "", "", 0);
      Owner owner0 = new Owner(client0);
      Car.CarType car_CarType0 = Car.CarType.ANY;
      Car car0 = new Car("b=6 ILwAZQvH,", owner0, car_CarType0, 339.0305020161473, 1789.259616627, 1789.259616627, 0, point0, "");
      // Undeclared exception!
      try { 
        owner0.addCar(car0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Owner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Owner owner0 = new Owner("bs3/\"", "", "", (-1858), "");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double((-1.0));
      Point point0 = new Point(double0, double0);
      Car car0 = new Car((String) null, owner0, car_CarType0, (-1858), 0.0, 733.65, (-1858), point0, "bs3/\"");
      Car car1 = new Car(car0);
      Client client0 = new Client(point0, "", "", "model.Owner", ",aq", 1663);
      Rental rental0 = new Rental(car0, client0, point0);
      car1.pendingRental(rental0);
      Rental rental1 = new Rental(car1, client0, point0);
      // Undeclared exception!
      try { 
        owner0.accept(rental1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Car", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Owner owner0 = null;
      try {
        owner0 = new Owner((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Owner owner0 = new Owner("", "QeuH@?Zh@p", "HA-ZD=|=Ub6pH6u", 2751, "model.Car");
      List<Car> list0 = owner0.getCars();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Owner owner0 = new Owner("", "QeuH@?Zh@p", "HA-ZD=|=Ub6pH6u", 2751, "model.Car");
      Car.CarType car_CarType0 = Car.CarType.ELECTRIC;
      Double double0 = new Double(786.71);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("", owner0, car_CarType0, 0.5, 0.0, 0.5, 2751, point0, "model.Car");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      car0.pendingRental(rental0);
      String string0 = "V_R<=c\\u=0U{?LRhX";
      Owner owner1 = new Owner("", string0, "model.Car", 2751, "model.Car");
      boolean boolean0 = owner0.equals(owner1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2908), (String) null);
      owner0.addCar((Car) null);
      Owner owner1 = new Owner((String) null, (String) null, (String) null, (-2908), (String) null);
      boolean boolean0 = owner0.equals(owner1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double(0.0);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "&J? HR' vVyW", "", "", (-1194));
      Owner owner0 = new Owner(client0);
      boolean boolean0 = owner0.equals("&J? HR' vVyW");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2830), (String) null);
      boolean boolean0 = owner0.equals(owner0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2830), (String) null);
      boolean boolean0 = owner0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Owner owner0 = new Owner("", "QeuH@?Zh@p", "HA-ZD=|=Ub6pH6u", 2751, "model.Car");
      Owner owner1 = new Owner(owner0);
      boolean boolean0 = owner0.equals(owner1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-2.8247042524285666));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "#k#j8NS$go`!'<BA", "#k#j8NS$go`!'<BA", "#k#j8NS$go`!'<BA", "#k#j8NS$go`!'<BA", (-1420));
      Owner owner0 = new Owner(client0);
      owner0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2830), (String) null);
      List<Rental> list0 = owner0.getPending();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Owner owner0 = new Owner((String) null, (String) null, (String) null, (-2830), (String) null);
      owner0.accept((Rental) null);
      Owner owner1 = new Owner((String) null, "sp$FSZIW8W?lZy", "sp$FSZIW8W?lZy", (-2830), "bY1:vk`iUB%Nc?(O*x@");
      boolean boolean0 = owner0.equals(owner1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Owner owner0 = new Owner("", "", "", 735, "");
      Car.CarType car_CarType0 = Car.CarType.GAS;
      Double double0 = new Double(873.078626);
      Point point0 = new Point(double0, double0);
      Car car0 = new Car("y);g2", owner0, car_CarType0, 1497.778, 1497.778, 0.0, 735, point0, "[a&k85WE@");
      Rental rental0 = new Rental(car0, (Client) null, point0);
      // Undeclared exception!
      try { 
        owner0.rate(rental0, 1327);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Rental", e);
      }
  }
}
