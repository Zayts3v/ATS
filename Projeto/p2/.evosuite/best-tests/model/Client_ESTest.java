/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 14:16:43 GMT 2020
 */

package model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import model.Car;
import model.Client;
import model.Owner;
import model.Rental;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import utils.Point;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Client_ESTest extends Client_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(951.2677205417613);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "X", "(951.27, 951.27)", "X", "(951.27, 951.27)", (-2452));
      Owner owner0 = new Owner("X", "X", "X", (-2452), "X");
      Car.CarType car_CarType0 = Car.CarType.HYBRID;
      Car car0 = new Car("X", owner0, car_CarType0, (-2452), (-2452), (-2452), (-2452), point0, "(951.27, 951.27)");
      Rental rental0 = new Rental(car0, client0, point0);
      client0.rate(rental0, (-2452), (-2452));
      assertEquals((-2452), owner0.getRates());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Client client0 = new Client((Point) null, (String) null, "wA", "", "bxo/", 0);
      // Undeclared exception!
      try { 
        client0.getPos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("utils.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double((-2774.8889621285));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client((Point) null, "Z./eZ}f15Q-el", "Z./eZ}f15Q-el", "Tempo a p\u00E9      ", "Tempo a p\u00E9      ", 204);
      Client client1 = new Client(point0, "#-[>F]3", "#-[>F]3", "Tempo a p\u00E9      ", "Tempo a p\u00E9      ", (-18));
      // Undeclared exception!
      try { 
        client0.equals(client1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client((Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double((-529.36712));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "Dono:           ", "E,.0Q", (String) null, "Viagem:         ", 100);
      Client client1 = new Client(client0);
      assertTrue(client1.equals((Object)client0));
      
      client1.addPendingRental((Rental) null);
      boolean boolean0 = client1.equals(client0);
      assertFalse(client1.equals((Object)client0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double((-2698.249092368166));
      Point point0 = new Point(double0, double0);
      Point point1 = new Point(point0);
      Client client0 = new Client(point1, "U", "U", "U", "U", 227);
      Client client1 = new Client(point0, "U", "U", "U", "U", 227);
      boolean boolean0 = client0.equals(client1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Double double0 = new Double((-2115.005939));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "", "", "\"T7T.[-?S[Gp", "", (-1033));
      boolean boolean0 = client0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Double double0 = new Double(951.2677205417613);
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "X", "(951.27, 951.27)", "X", "(951.27, 951.27)", (-2452));
      boolean boolean0 = client0.equals(client0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double((-2980.9854));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Car$CarType", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", 878);
      List<Rental> list0 = client0.getPendingRates();
      boolean boolean0 = client0.equals(list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double((-529.36712));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "Dono:           ", "E,.0Q", (String) null, "Viagem:         ", 100);
      Client client1 = new Client(client0);
      boolean boolean0 = client1.equals(client0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double((-2980.9854));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Car$CarType", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", 878);
      client0.setPos(point0);
      assertEquals(100, client0.getRates());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double((-2980.9854));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Car$CarType", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", 878);
      client0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double((-2980.9854));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "model.Car$CarType", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", "4CGZUY1c {R{$zO0", 878);
      // Undeclared exception!
      try { 
        client0.rate((Rental) null, 1925, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("model.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double((-529.36712));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "Dono:           ", "E,.0Q", (String) null, "Viagem:         ", 100);
      client0.addPendingRental((Rental) null);
      List<Rental> list0 = client0.getPendingRates();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double((-529.36712));
      Point point0 = new Point(double0, double0);
      Client client0 = new Client(point0, "Dono:           ", "E,.0Q", (String) null, "Viagem:         ", 100);
      Point point1 = client0.getPos();
      assertNotSame(point1, point0);
  }
}
