/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 13:47:28 GMT 2020
 */

package controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import controller.Controller;
import java.util.NoSuchElementException;
import model.Client;
import model.Owner;
import model.UMCarroJa;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import utils.Point;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("");
      Client client0 = new Client((Point) null, "", "*']ZD[qI9z4", "", "*']ZD[qI9z4", (-1002));
      uMCarroJa0.addUser(client0);
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("9dl0!;");
      SystemInUtil.addInputLine("9dl0!;");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.specific();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("%hVg?}M'Y*eHVB3x");
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.run();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("");
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.nUses();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("\"-E b[5igz4O]X:U_1Vy");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("\"-E b[5igz4O]X:U_1Vy");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("al0p;");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.historyOwner();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("Pre\u00E7o/km");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.historyClient();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SystemInUtil.addInputLine("Pre\u00E7o/km");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("Pre\u00E7o/km");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.filter("Pre\u00E7o/km");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.distance();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("@KuZhu.");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("@KuZhu.");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.cheapestNear();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine("al0p;");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("al0p;");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.autonomy();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.reviewRental();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("");
      Client client0 = new Client((Point) null, "", "", "~K^-5S.i.>hW&~-*H:k", "g(@1", (-1002));
      uMCarroJa0.addUser(client0);
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      // Undeclared exception!
      try { 
        controller0.reviewRental();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // model.Client cannot be cast to model.Owner
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.pending();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.login();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemInUtil.addInputLine("al0p;");
      SystemInUtil.addInputLine("al0p;");
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.login();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("rmx8");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Owner owner0 = new Owner("rmx8", "", "", (-631), "rmx8");
      uMCarroJa0.addUser(owner0);
      SystemInUtil.addInputLine("rmx8");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      // Undeclared exception!
      try { 
        controller0.carOverview();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.carOverview();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("");
      Client client0 = new Client((Point) null, "", "", "Total faturado: ", "Total faturado: ", (-1002));
      uMCarroJa0.addUser(client0);
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      // Undeclared exception!
      try { 
        controller0.carOverview();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // model.Client cannot be cast to model.Owner
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SystemInUtil.addInputLine("");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      SystemInUtil.addInputLine("");
      Client client0 = new Client((Point) null, "", "", "~K^-5S.i.>hW&~-*H:k", "~K^-5S.i.>hW&~-*H:k", (-1002));
      uMCarroJa0.addUser(client0);
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      controller0.pending();
      controller0.run();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SystemInUtil.addInputLine("rmxM");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Owner owner0 = new Owner("rmxM", "rmxM", "rmxM", (-651), "rmxM");
      uMCarroJa0.addUser(owner0);
      SystemInUtil.addInputLine("rmxM");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      controller0.reviewRental();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("rmx8");
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Owner owner0 = new Owner("rmx8", "", "", (-651), "rmx8");
      uMCarroJa0.addUser(owner0);
      SystemInUtil.addInputLine("rmx8");
      Controller controller0 = new Controller(uMCarroJa0);
      controller0.login();
      // Undeclared exception!
      try { 
        controller0.pending();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // model.Owner cannot be cast to model.Client
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.addCar();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.historyOwner();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.distance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.historyClient();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.filter("Pre\u00E7o/km");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.nUses();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("controller.Controller", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.cheapestNear();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.registerOwner();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.registerClient();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Controller controller0 = new Controller(uMCarroJa0);
      // Undeclared exception!
      try { 
        controller0.autonomy();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Controller controller0 = new Controller((UMCarroJa) null);
      // Undeclared exception!
      try { 
        controller0.specific();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
