/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 17 13:38:54 GMT 2020
 */

package view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import java.time.Month;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import view.Menu;
import view.viewmodel.NewLogin;
import view.viewmodel.RateOwnerCar;
import view.viewmodel.RegisterUser;
import view.viewmodel.SpecificCar;
import view.viewmodel.TimeInterval;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Menu_ESTest extends Menu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      RateOwnerCar rateOwnerCar0 = menu0.pendingRateShow("vd(h |rg|F'", "9", 2);
      assertEquals(0, rateOwnerCar0.getCarRate());
      assertTrue(menu0.getRun());
      assertEquals(9, rateOwnerCar0.getOwnerRate());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      // Undeclared exception!
      try { 
        menu0.newRegisterCar("l");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      try { 
        menu0.simpleCarRent("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.viewmodel.RentCarSimple", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("0");
      try { 
        menu0.walkingDistanceRent((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.viewmodel.CheapestNearCar", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      try { 
        menu0.autonomyCarRent("TT8jSpf");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.viewmodel.AutonomyCar", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.walkingDistanceRent((String) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("o");
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      menu0.top10ClientsShow(linkedList0, "\u001B[0m");
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("\u001Bc\u001B[31m\t--INITIAL--\n\u001B[0m\n\n1- Login\n2- Registar novo utilizador\n");
      menu0.showString("");
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("gJOg5\"~18Q'");
      Menu menu0 = new Menu();
      Month month0 = Month.FEBRUARY;
      LocalDateTime localDateTime0 = MockLocalDateTime.of((-1), month0, 17, 12, 12, 12, 12);
      TimeInterval timeInterval0 = new TimeInterval(localDateTime0, localDateTime0);
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      menu0.rentalHistoryShow(timeInterval0, linkedList0);
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("b");
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.OWNER;
      menu0.selectOption(menu_MenuInd0);
      menu0.parser();
      assertEquals(Menu.MenuInd.OWNER, menu0.getMenuOpts());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine(";");
      SystemInUtil.addInputLine("+=PSlKKd=u>8y+c}sD-");
      SystemInUtil.addInputLine(";");
      SystemInUtil.addInputLine(";");
      Menu menu0 = new Menu();
      try { 
        menu0.newRegisterCar((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      SpecificCar specificCar0 = menu0.specificCarRent("");
      assertEquals("0", specificCar0.getNumberPlate());
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      menu0.showRentalRate("0");
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("9");
      menu0.showRentalRate("view.viewmodel.RateOwnerCar");
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.HISTORYOWNER;
      Menu menu1 = menu0.selectOption(menu_MenuInd0);
      Menu menu2 = menu1.back();
      assertEquals(Menu.MenuInd.HISTORYOWNER, menu0.getMenuOpts());
      
      menu2.selectOption(menu_MenuInd0);
      assertFalse(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("Matricula:");
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      menu0.reviewRentShow("Matricula:", 857, linkedList0);
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("l*-L");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("");
      menu0.parser();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      menu0.reviewRentShow("l*-L", 1950, linkedList0);
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("99");
      SystemInUtil.addInputLine("99");
      RateOwnerCar rateOwnerCar0 = menu0.pendingRateShow(".i#`g.Q +[SYqSPm/$", ".i#`g.Q +[SYqSPm/$", 2044234);
      assertEquals(99, rateOwnerCar0.getOwnerRate());
      assertTrue(menu0.getRun());
      assertEquals(99, rateOwnerCar0.getCarRate());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("3");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      RegisterUser registerUser0 = menu0.newRegisterUser((String) null);
      assertEquals("3", registerUser0.getAddress());
      assertEquals(3, registerUser0.getNif());
      assertTrue(menu0.getRun());
      assertEquals("3", registerUser0.getPasswd());
      assertEquals("0", registerUser0.getName());
      assertEquals("3", registerUser0.getEmail());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("G o#RuhSF_Yzn");
      SystemInUtil.addInputLine("CTUc*1az@6^ol)-");
      NewLogin newLogin0 = menu0.newLogin("5sX['HF3V pRn");
      assertEquals("G o#RuhSF_Yzn", newLogin0.getUser());
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.REGISTEROWNER;
      Menu menu1 = menu0.selectOption(menu_MenuInd0);
      menu1.back();
      boolean boolean0 = menu0.getRun();
      assertEquals(Menu.MenuInd.REGISTEROWNER, menu0.getMenuOpts());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      SystemInUtil.addInputLine("9");
      menu0.carOverviewShow("0", linkedList0);
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("");
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      menu0.carOverviewShow("view.viewmodel.SpecificCar", linkedList0);
      assertTrue(menu0.getRun());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemInUtil.addInputLine("uB4+^");
      SystemInUtil.addInputLine("uB4+^");
      Menu menu0 = new Menu();
      try { 
        menu0.walkingDistanceRent("uB4+^");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        menu0.top10ClientsShow(linkedList0, "");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      linkedList0.add(list0);
      // Undeclared exception!
      try { 
        menu0.top10ClientsShow(linkedList0, "}?v+UL");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SystemInUtil.addInputLine("Tempo Estimado");
      SystemInUtil.addInputLine("exceptions.InvalidRatingException");
      Menu menu0 = new Menu();
      try { 
        menu0.specificCarRent("\u001B[32m");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("\u001Bc\u001B[31m\t--INITIAL--\n\u001B[0m\n\n1- Login\n2- Registar novo utilizador\n");
      try { 
        menu0.simpleCarRent("~L[,Uu}ASItk?");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SystemInUtil.addInputLine("f");
      Menu menu0 = new Menu();
      // Undeclared exception!
      menu0.showRentalRate("f");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.selectOption((Menu.MenuInd) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.reviewRentShow((String) null, 796, (List<List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.rentalHistoryShow((TimeInterval) null, (List<List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Menu menu0 = new Menu();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond((-1L), 17, zoneOffset0);
      TimeInterval timeInterval0 = new TimeInterval(localDateTime0, localDateTime0);
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.add((List<String>) linkedList1);
      // Undeclared exception!
      try { 
        menu0.rentalHistoryShow(timeInterval0, linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("Inicio da Viagem");
      try { 
        menu0.pendingRateShow("Inicio da Viagem", "$'57", (-89));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SystemInUtil.addInputLine("9[mly~.XP");
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("b");
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("eikz~qH");
      Menu menu0 = new Menu();
      try { 
        menu0.newRegisterUser("b");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.newRegisterUser("Carro mais barato dentro de uma dist\u00E2ncia");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("t@\"{w54");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      SystemInUtil.addInputLine("3");
      try { 
        menu0.newRegisterCar("l");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.viewmodel.RegisterCar", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("G o#RuhSF_Yzn");
      try { 
        menu0.getTimeInterval("CTUc*1az@6^ol)-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.carOverviewShow("JJG=sa_", (List<List<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.addFirst(linkedList1);
      // Undeclared exception!
      try { 
        menu0.carOverviewShow("Organizado por dist\u00E2ncia", linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("\u001Bc\u001B[31m\t--INITIAL--\n\u001B[0m\n\n1- Login\n2- Registar novo utilizador\n");
      try { 
        menu0.autonomyCarRent("Email:");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Menu menu0 = new Menu();
      String string0 = menu0.toString();
      assertTrue(menu0.getRun());
      assertEquals("\u001Bc\u001B[31m\t--INITIAL--\n\u001B[0m\n\n1- Login\n2- Registar novo utilizador\n", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.back();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.TOP10CLIENTS;
      menu0.selectOption(menu_MenuInd0);
      // Undeclared exception!
      try { 
        menu0.parser();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.RENTALS;
      Menu menu0 = new Menu();
      Menu menu1 = menu0.selectOption(menu_MenuInd0);
      // Undeclared exception!
      try { 
        menu1.parser();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = Menu.MenuInd.CLIENT;
      Menu menu1 = menu0.selectOption(menu_MenuInd0);
      // Undeclared exception!
      try { 
        menu1.parser();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.add((List<String>) linkedList1);
      // Undeclared exception!
      try { 
        menu0.reviewRentShow("0", 654, linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("0");
      RateOwnerCar rateOwnerCar0 = menu0.pendingRateShow("", "0", 2);
      assertTrue(menu0.getRun());
      assertEquals(0, rateOwnerCar0.getOwnerRate());
      assertEquals(0, rateOwnerCar0.getCarRate());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.pendingRateShow("", "0", 2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SystemInUtil.addInputLine("2");
      Menu menu0 = new Menu();
      menu0.parser();
      // Undeclared exception!
      try { 
        menu0.parser();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("0");
      Menu menu1 = menu0.parser();
      assertTrue(menu1.getRun());
      assertEquals(Menu.MenuInd.INITIAL, menu1.getMenuOpts());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      Menu menu0 = new Menu();
      Menu menu1 = menu0.parser();
      assertTrue(menu1.getRun());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SystemInUtil.addInputLine("9[mly~.XP");
      SystemInUtil.addInputLine("9[mly~.XP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("eikz~qH");
      SystemInUtil.addInputLine("0");
      Menu menu0 = new Menu();
      RegisterUser registerUser0 = menu0.newRegisterUser("9[mly~.XP");
      assertEquals("", registerUser0.getPasswd());
      assertTrue(menu0.getRun());
      assertEquals("eikz~qH", registerUser0.getAddress());
      assertEquals("9[mly~.XP", registerUser0.getName());
      assertEquals(0, registerUser0.getNif());
      assertEquals("9[mly~.XP", registerUser0.getEmail());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        menu0.reviewRentShow("h~WiqATxP!^Zo47^j&X", 1670, linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Menu menu0 = new Menu();
      SystemInUtil.addInputLine("99");
      SystemInUtil.addInputLine("99");
      // Undeclared exception!
      try { 
        menu0.autonomyCarRent("99");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        menu0.top10ClientsShow(linkedList0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("view.Table", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.getTimeInterval("");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.showString("h~WiqATxP!^Zo47^j&X");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.simpleCarRent("FJ+4y");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Menu menu0 = new Menu();
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        menu0.carOverviewShow("9[mly~.XP", linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.showRentalRate("f");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Menu menu0 = new Menu();
      boolean boolean0 = menu0.getRun();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Menu menu0 = new Menu();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      TimeInterval timeInterval0 = new TimeInterval(localDateTime0, localDateTime0);
      LinkedList<List<String>> linkedList0 = new LinkedList<List<String>>();
      // Undeclared exception!
      try { 
        menu0.rentalHistoryShow(timeInterval0, linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.newLogin("EVIEWRENTA");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.specificCarRent("");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Menu menu0 = new Menu();
      Menu.MenuInd menu_MenuInd0 = menu0.getMenuOpts();
      Menu menu1 = menu0.selectOption(menu_MenuInd0);
      assertTrue(menu1.getRun());
      
      menu1.back();
      assertFalse(menu1.getRun());
  }
}
